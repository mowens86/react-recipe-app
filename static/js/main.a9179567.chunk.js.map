{"version":3,"sources":["components/UI/loginButton/loginButton.js","components/Login/Login.js","components/ResultModal/ResultModal.js","components/Helpers/Helpers.js","components/StarRating/StarRating.js","components/Results/Results.js","components/Searchbar/Searchbar.js","components/Joke/Joke.js","components/Footer/Footer.js","components/UI/LogoutButton/LogoutButton.js","components/UI/IsLoading/IsLoading.js","App.js","reportWebVitals.js","components/UI/Theme/Theme.js","index.js"],"names":["LoginButton","props","loginWithRedirect","useAuth0","onClick","bg","color","_hover","children","Login","minH","align","justify","spacing","mx","maxW","py","px","rounded","useColorModeValue","boxShadow","p","fontSize","ResultModal","str","useDisclosure","isOpen","onOpen","onClose","noImage","size","mt","isCentered","motionPreset","scrollBehavior","src","modalImage","alt","modalName","title","onError","borderTopRightRadius","borderTopLeftRadius","backgroundColor","allowToggle","flex","textAlign","modalSummary","toString","replace","colorScheme","mr","style","textDecoration","href","modalInstructions","isExternal","StarRating","ratingScore","Math","round","score","name","editing","starCount","value","Results","w","maxH","border","borderColor","image","borderRadius","fullName","Searchbar","useState","foodData","setFoodData","error","setError","loading","setLoading","search","setSearch","url","setUrl","useEffect","a","axios","searchResults","data","console","log","fetchFoodData","foodResults","undefined","results","map","length","substring","spoonacularScore","summary","spoonacularSourceUrl","id","onSubmit","event","preventDefault","process","type","placeholder","onChange","target","borderBottomRightRadius","rightIcon","borderBottomLeftRadius","marginInlineStart","direction","Joke","jokeData","setJokeData","jokeTrigger","setJokeTrigger","getJoke","get","then","res","resJoke","joke","text","initialFocusRef","React","useRef","placement","closeOnBlur","d","alignItems","justifyContent","pb","ref","SocialButton","label","button","h","cursor","as","display","transition","Footer","year","Date","getFullYear","position","bottom","width","Stack","base","md","LogoutButton","logout","returnTo","window","location","origin","IsLoading","isIndeterminate","App","isAuthenticated","isLoading","bgImage","bgAttachment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","fonts","heading","body","ReactDOM","render","StrictMode","CookiesProvider","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.a9179567.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Button } from '@chakra-ui/react';\r\n\r\nexport default function LoginButton (props) {\r\n    const { loginWithRedirect } = useAuth0();\r\n\r\n    return (\r\n            <Button \r\n                onClick={() => loginWithRedirect()} \r\n                bg={'blue.400'}\r\n                color={'white'}\r\n                _hover={{\r\n                bg: 'blue.500',\r\n            }}>{props.children}</Button>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Stack,\r\n    Heading,\r\n    Text,\r\n    useColorModeValue,\r\n    Center\r\n} from '@chakra-ui/react';\r\nimport LoginButton from '../UI/loginButton/loginButton';\r\n\r\nexport default function Login() {\r\n\r\n    return (\r\n        <Flex\r\n            minH={'100vh'}\r\n            align={'center'}\r\n            justify={'center'}\r\n        >\r\n            <Stack\r\n                spacing={8}\r\n                mx={'auto'}\r\n                maxW={'lg'}\r\n                py={12}\r\n                px={6}\r\n            >\r\n                <Box\r\n                    rounded={'lg'}\r\n                    bg={useColorModeValue('white', 'gray.700')}\r\n                    boxShadow={'lg'}\r\n                    p={8}\r\n                >\r\n                    <Stack spacing={4}>\r\n                        <Center>\r\n                            <Heading fontSize={'4xl'}>Welcome to Sporked</Heading>\r\n                        </Center>\r\n                        <Text fontSize={'lg'} color={'gray.600'}>\r\n                            Sign up or login to enjoy all of our cool recipes 🍲\r\n                        </Text>\r\n                        <LoginButton>Get Started</LoginButton>\r\n                    </Stack>\r\n                </Box>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n}","import React from 'react';\r\nimport { htmlTagRemover } from '../Helpers/Helpers';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Image,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  useDisclosure,\r\n  Link,\r\n  Center,\r\n  Spinner\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\nconst ResultModal = (props) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const noImage = (\r\n    <Center>\r\n      <Spinner size=\"xl\" color=\"red.500\" />\r\n    </Center>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={onOpen}\r\n        size=\"xs\"\r\n        mt=\"2\"\r\n      >\r\n        More Info\r\n          </Button>\r\n      <Modal\r\n        isCentered\r\n        onClose={onClose}\r\n        isOpen={isOpen}\r\n        motionPreset=\"slideInBottom\"\r\n        scrollBehavior=\"inside\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <Image\r\n            src={props.modalImage}\r\n            alt={props.modalName}\r\n            title={props.modalName}\r\n            onError={noImage}\r\n            borderTopRightRadius=\"md\"\r\n            borderTopLeftRadius=\"md\"\r\n            align=\"center\"\r\n          />\r\n          <ModalHeader>{props.modalName}</ModalHeader>\r\n          <ModalCloseButton backgroundColor=\"blue.100\" _hover={{ backgroundColor: \"blue.100\" }} />\r\n          <ModalBody>\r\n\r\n            <Accordion allowToggle>\r\n              <AccordionItem>\r\n                <h3>\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      Summary\r\n                      </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </h3>\r\n                <AccordionPanel>{htmlTagRemover(props.modalSummary)}</AccordionPanel>\r\n              </AccordionItem>\r\n            </Accordion>\r\n\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Link style={{ textDecoration: 'none' }} href={props.modalInstructions} isExternal>\r\n              <Button colorScheme=\"red\">Go to Recipe</Button>\r\n            </Link>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResultModal;","/**\r\n * This is a list of helper functions used for various components\r\n */\r\n\r\nexport const htmlTagRemover = (str) => {\r\n    if ((str === null) || (str === '')) {\r\n      return false;\r\n    } else {\r\n      str = str.toString();\r\n    } \r\n    return str.replace( /(<([^>]+)>)/ig, '');\r\n}\r\n\r\nexport const foodTitleCutOff = (str) => {\r\n  return str.length > 50 ? str = `${str.substring(0,50)}...` : str;\r\n}","import React from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport {\r\n    Box\r\n} from \"@chakra-ui/react\";\r\n\r\nconst StarRating = (props) => {\r\n\r\n    // Normally calculates score 1-100 -> this divides 100 by 10 and then divides by 2 to get a 0-5 star average rating and rounds it to the nearest integer\r\n    const ratingScore = Math.round((props.score / 10) / 2);\r\n\r\n    return (\r\n        <Box>\r\n            <StarRatingComponent\r\n                name=\"rating\"\r\n                editing={false}\r\n                starCount={5}\r\n                value={ratingScore}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StarRating;","import React from 'react';\r\nimport ResultModal from '../ResultModal/ResultModal';\r\nimport StarRating from '../StarRating/StarRating';\r\nimport {\r\n    Box,\r\n    Image,\r\n    Text,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Results = (props) => {\r\n\r\n\r\n    return (\r\n        <Box\r\n            w=\"225px\"\r\n            maxH=\"310px\"\r\n            boxShadow=\"xl\"\r\n            p=\"4\"\r\n            rounded=\"md\"\r\n            bg=\"white\"\r\n            border=\"1px\"\r\n            borderColor=\"gray.100\"\r\n        >\r\n\r\n            <VStack>\r\n                <Image\r\n                    src={props.image}\r\n                    alt={props.name}\r\n                    title={props.name}\r\n                    borderRadius=\"sm\"\r\n                />\r\n                <Box w=\"100%\">\r\n                    <Text fontSize=\"sm\">{props.name}</Text>\r\n                    <Text fontSize=\"x-small\" mt=\"1\">Health Rating: {props.score}</Text>\r\n                    <StarRating\r\n                        score={props.score}\r\n                    />\r\n                    <ResultModal\r\n                        modalName={props.fullName}\r\n                        modalSummary={props.modalSummary}\r\n                        modalInstructions={props.modalInstructions}\r\n                        modalImage={props.image}\r\n                    />\r\n                </Box>\r\n            </VStack>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Results;","import React, { useState, useEffect } from 'react';\r\nimport { IoChevronForward } from 'react-icons/io5';\r\nimport { foodTitleCutOff } from '../Helpers/Helpers';\r\nimport Results from '../Results/Results';\r\nimport axios from 'axios';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Stack,\r\n    Flex,\r\n    Spinner,\r\n    Center,\r\n    Text\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\nconst API_KEY = process.env.REACT_APP_FOOD_API_KEY;\r\n\r\nconst Searchbar = () => {\r\n    // States\r\n    const [foodData, setFoodData] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [url, setUrl] = useState(``);\r\n\r\n    // Fetch data by searching for food\r\n    useEffect(() => {\r\n        const fetchFoodData = async () => {\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            try {\r\n                const searchResults = await axios(url);\r\n                setFoodData(searchResults.data);\r\n                // console.log(searchResults);\r\n            }\r\n\r\n            catch (err) {\r\n                setError(true);\r\n                console.log(err);\r\n            }\r\n\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchFoodData();\r\n    }, [url]);\r\n\r\n    // Handle search event\r\n    const searchHandler = (event) => {\r\n        event.preventDefault();\r\n        setUrl(\r\n            `https://api.spoonacular.com/recipes/complexSearch?query=${search}&addRecipeInformation=true&instructionsRequired=true&includeIngredients&number=3&sort=healthiness&sortDirection=desc&autocomplete&apiKey=${API_KEY}` // Adjust number for amount of search results\r\n        )\r\n    }\r\n\r\n    let foodResults;\r\n\r\n    // Need to set error and loading if nothing is found for results\r\n    if (loading) {\r\n        foodResults = (\r\n            <Center>\r\n                <Spinner size=\"xl\" color=\"red.500\" />\r\n            </Center>\r\n        )\r\n    }\r\n\r\n    // Need to fix this error, causing too many redirects\r\n    if (error) {\r\n        foodResults = (\r\n            <Center>\r\n                <Text>Search for food...</Text>\r\n            </Center>\r\n        )\r\n    }\r\n    \r\n\r\n    if (foodData.results !== undefined) {\r\n        foodResults = foodData.results.map(data => ( // Loops through search results for all finds\r\n            <Results\r\n                key={data.id}\r\n                name={foodTitleCutOff(data.title)}\r\n                fullName={data.title}\r\n                image={data.image}\r\n                score={data.spoonacularScore}\r\n                modalSummary={data.summary}\r\n                modalInstructions={data.spoonacularSourceUrl}\r\n            />\r\n        ));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={searchHandler}>\r\n                <FormControl id=\"search\">\r\n                    <FormLabel>Search your favorite recipe</FormLabel>\r\n                    <Flex>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Type here...\"\r\n                            value={search}\r\n                            onChange={event => setSearch(event.target.value)}\r\n                            borderTopRightRadius=\"0\"\r\n                            borderBottomRightRadius=\"0\"\r\n                        />\r\n                        <Button\r\n                            rightIcon={<IoChevronForward />}\r\n                            type=\"submit\"\r\n                            borderTopLeftRadius=\"0\"\r\n                            borderBottomLeftRadius=\"0\"\r\n                            marginInlineStart=\"0px\"\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Flex>\r\n                </FormControl>\r\n            </form>\r\n            <Stack mt=\"4\" direction={[\"column\", \"row\"]} spacing=\"24px\">\r\n                {foodResults}\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    ButtonGroup,\r\n    Text,\r\n    Image,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_FOOD_API_KEY;\r\n\r\nconst Joke = (props) => {\r\n    // States\r\n    const [ jokeData, setJokeData ] = useState([]);\r\n    const [ jokeTrigger, setJokeTrigger ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getJoke();\r\n    }, [jokeTrigger]);\r\n\r\n    // Call joke\r\n    const getJoke = () => {\r\n        axios.get(`https://api.spoonacular.com/food/jokes/random?apiKey=${API_KEY}`)\r\n            .then((res) => {\r\n                const resJoke = res.data;\r\n                setJokeData(resJoke);\r\n            });\r\n    }\r\n\r\n    // Handle joke event\r\n    const jokeHandler = (event) => {\r\n        event.preventDefault();\r\n        setJokeTrigger(!jokeTrigger);\r\n    }\r\n\r\n    let joke = <Text>{jokeData.text}</Text>;\r\n    if (jokeData.text !== jokeData) {\r\n        joke = (\r\n            <Text>{jokeData.text}</Text>\r\n        )\r\n    }\r\n\r\n    const initialFocusRef = React.useRef();\r\n\r\n    return (\r\n        <Box>\r\n            <Text fontSize=\"3xl\">Ask Jives a Food Joke!</Text>\r\n            <Image src={`${process.env.PUBLIC_URL}/ask_jives.png`} />\r\n            <Popover\r\n                      initialFocusRef={initialFocusRef}\r\n                      placement=\"bottom\"\r\n                      closeOnBlur={false}\r\n            >\r\n                <PopoverTrigger>\r\n                    <Button>Ask Jives</Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent>\r\n                    <PopoverArrow />\r\n                    <PopoverCloseButton />\r\n                    <PopoverHeader>Let me tell you a joke...</PopoverHeader>\r\n                    <PopoverBody>{joke}</PopoverBody>\r\n                    <PopoverFooter\r\n                        border=\"0\"\r\n                        d=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                        pb={4}\r\n                        >\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button colorScheme=\"blue\" ref={initialFocusRef} onClick={jokeHandler}>\r\n                                Tell Another\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </PopoverFooter>\r\n                </PopoverContent>\r\n            </Popover>    \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Joke;","import React from 'react';\r\nimport {\r\n    Box,\r\n    chakra,\r\n    Container,\r\n    Link,\r\n    Stack,\r\n    Text,\r\n    useColorModeValue,\r\n    VisuallyHidden,\r\n  } from '@chakra-ui/react';\r\nimport { FaBriefcase, FaGithub } from 'react-icons/fa';\r\nimport { HiMail } from 'react-icons/hi';\r\n  \r\n  const SocialButton = ({\r\n    children,\r\n    label,\r\n    href,\r\n    target\r\n  }) => {\r\n    return (\r\n      <chakra.button\r\n        bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\r\n        rounded={'full'}\r\n        w={8}\r\n        h={8}\r\n        cursor={'pointer'}\r\n        as={'a'}\r\n        href={href}\r\n        display={'inline-flex'}\r\n        alignItems={'center'}\r\n        justifyContent={'center'}\r\n        transition={'background 0.3s ease'}\r\n        target={target}\r\n        _hover={{\r\n          bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\r\n        }}>\r\n        <VisuallyHidden>{label}</VisuallyHidden>\r\n        {children}\r\n      </chakra.button>\r\n    );\r\n  };\r\n  \r\n  export default function Footer() {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n      <Box\r\n        bg={useColorModeValue('gray.50', 'gray.900')}\r\n        color={useColorModeValue('gray.700', 'gray.200')}\r\n        position=\"fixed\"\r\n        bottom=\"0\"\r\n        width=\"100%\"\r\n      >\r\n        <Container\r\n          as={Stack}\r\n          maxW={'6xl'}\r\n          py={4}\r\n          direction={{ base: 'column', md: 'row' }}\r\n          spacing={4}\r\n          justify={{ base: 'center', md: 'center' }}\r\n          align={{ base: 'center', md: 'center' }}\r\n        >\r\n          <Text>© {year}, Sporked was built with React by Mike Owens <Link color=\"teal.500\" href=\"https://www.mowenstech.com/\" target=\"_blank\">(View Portfolio)</Link>. All rights reserved.</Text>\r\n          <Stack direction={'row'} spacing={6}>\r\n            <SocialButton label={'Github'} href={'https://github.com/mowens86'} target=\"_blank\">\r\n              <FaGithub />\r\n            </SocialButton>\r\n            <SocialButton label={'Resume'} href={'https://www.mowenstech.com/assets/MJO_FED_Resume.pdf'} target=\"_blank\">\r\n              <FaBriefcase />\r\n            </SocialButton>\r\n            <SocialButton label={'Mail'} href={'mailto:mocoding86@gmail.com?subject=I Found You via Sporked'} target=\"_blank\">\r\n              <HiMail />\r\n            </SocialButton>\r\n          </Stack>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }","import React from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Button } from '@chakra-ui/react';\r\n\r\nexport default function LogoutButton (props) {\r\n    const { logout  } = useAuth0();\r\n\r\n    return (\r\n            <Button \r\n                onClick={() => logout ( { returnTo: window.location.origin } )} \r\n                bg={'blue.400'}\r\n                color={'white'}\r\n                _hover={{\r\n                bg: 'blue.500',\r\n            }}>{props.children}</Button>\r\n    );\r\n}","import { Center, Container, Text } from '@chakra-ui/layout';\r\nimport { Progress } from '@chakra-ui/progress';\r\nimport React from 'react';\r\nimport Footer from '../../Footer/Footer';\r\n\r\nexport default function IsLoading() {\r\n\r\n    return (\r\n        <Center minH=\"100vh\">\r\n            <Container\r\n                maxW={'6xl'}\r\n                py={4}\r\n                direction={{ base: 'column', md: 'row' }}\r\n                spacing={4}\r\n                justify={{ base: 'center', md: 'space-between' }}\r\n                align={{ base: 'center', md: 'center' }}\r\n            >\r\n                <Center>\r\n                    <Text pb='5'>The Recipe App is Loading...</Text>\r\n                </Center>\r\n                <Progress size=\"xs\" isIndeterminate />\r\n            </Container>\r\n            <Footer />\r\n        </Center>\r\n    )\r\n}","import React from 'react';\nimport Login from './components/Login/Login';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Joke from './components/Joke/Joke';\nimport Footer from './components/Footer/Footer';\nimport { Box, Container } from \"@chakra-ui/react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LogoutButton from './components/UI/LogoutButton/LogoutButton';\nimport IsLoading from './components/UI/IsLoading/IsLoading';\n\nfunction App() {\n  const { isAuthenticated, isLoading } = useAuth0();\n  \n\n  if (isLoading) return <IsLoading />\n\n  if (!isAuthenticated) {\n    return (\n      <Box minH=\"100vh\"\n      bgImage={`url(${process.env.PUBLIC_URL}/salad.jpg)`}\n      bgAttachment=\"fixed\"\n      >\n        <Container \n            maxW={'6xl'}\n            py={4}\n            direction={{ base: 'column', md: 'row' }}\n            spacing={4}\n            justify={{ base: 'center', md: 'space-between' }}\n            align={{ base: 'center', md: 'center' }}\n            // bgImage={`url(${process.env.PUBLIC_URL}/salad.jpg)`}\n            pb=\"10rem\"\n          >\n            <Login/>\n        </Container>\n        <Footer />\n      </Box>\n    );\n  }\n\n  if (isAuthenticated) {\n    return (\n      <Box minH=\"100vh\">\n        <Container \n            maxW={'6xl'}\n            py={4}\n            direction={{ base: 'column', md: 'row' }}\n            spacing={4}\n            justify={{ base: 'center', md: 'space-between' }}\n            align={{ base: 'center', md: 'center' }}\n            pb=\"15rem\"\n          >\n            <Searchbar />\n            <Joke />\n            <LogoutButton>Logout</LogoutButton>\n        </Container>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst theme = extendTheme({\r\n  fonts: {\r\n    heading: \"Condiment\",\r\n    body: \"Roboto Condensed\",\r\n  },\r\n})\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { CookiesProvider } from 'react-cookie';\nimport theme from './components/UI/Theme/Theme';\nimport \"@fontsource/condiment/400.css\";\nimport \"@fontsource/roboto-condensed/400.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <CookiesProvider>\n        <ChakraProvider theme={theme}>\n          <Auth0Provider\n            domain=\"dev-mowens.us.auth0.com\"\n            clientId=\"ppY1ISKYky0eQPPt3Dis5XmKyl4D2XYm\"\n            redirectUri={window.location.origin}>\n            <App />\n          </Auth0Provider>\n        </ChakraProvider>\n      </CookiesProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}