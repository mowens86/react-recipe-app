{"version":3,"sources":["components/Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Login","minH","align","justify","bg","useColorModeValue","spacing","mx","maxW","py","px","fontSize","color","rounded","boxShadow","p","id","type","direction","base","sm","_hover","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAeiB,SAASA,IAItB,OACI,cAAC,IAAD,CACAC,KAAM,QACNC,MAAO,SACPC,QAAS,SACTC,GAAIC,YAAkB,UAAW,YAJjC,SAKI,eAAC,IAAD,CAAOC,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,GAAIC,GAAI,EAAvD,UACA,eAAC,IAAD,CAAOR,MAAO,SAAd,UACI,cAAC,IAAD,CAASS,SAAU,MAAnB,oCACA,cAAC,IAAD,CAAMA,SAAU,KAAMC,MAAO,WAA7B,8DAIJ,cAAC,IAAD,CACIC,QAAS,KACTT,GAAIC,YAAkB,QAAS,YAC/BS,UAAW,KACXC,EAAG,EAJP,SAKI,eAAC,IAAD,CAAOT,QAAS,EAAhB,UACI,eAAC,IAAD,CAAaU,GAAG,QAAhB,UACI,cAAC,IAAD,4BACA,cAAC,IAAD,CAAOC,KAAK,aAEhB,eAAC,IAAD,CAAaD,GAAG,WAAhB,UACI,cAAC,IAAD,uBACA,cAAC,IAAD,CAAOC,KAAK,gBAEhB,eAAC,IAAD,CAAOX,QAAS,GAAhB,UACI,cAAC,IAAD,CACAY,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjClB,MAAO,QACPC,QAAS,gBAHT,SAII,eAAC,IAAD,CAAMI,GAAI,OAAV,sCAC6B,cAAC,IAAD,CAAMK,MAAO,WAAb,2BAGjC,cAAC,IAAD,CACAR,GAAI,WACJQ,MAAO,QACPS,OAAQ,CACJjB,GAAI,YAJR,kCC5CTkB,MARf,WACE,OACE,8BACE,cAACtB,EAAD,OCMSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDdQ,IAASC,OAEL,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a04c8b35.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Flex,\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Stack,\r\n    Link,\r\n    Button,\r\n    Heading,\r\n    Text,\r\n    useColorModeValue,\r\n  } from '@chakra-ui/react';\r\n\r\n  export default function Login() {\r\n\r\n    // Create initial sign-up page with link to login page if already have an account\r\n\r\n    return (\r\n        <Flex\r\n        minH={'100vh'}\r\n        align={'center'}\r\n        justify={'center'}\r\n        bg={useColorModeValue('gray.50', 'gray.800')}>\r\n            <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\r\n            <Stack align={'center'}>\r\n                <Heading fontSize={'4xl'}>Sign up for an account</Heading>\r\n                <Text fontSize={'lg'} color={'gray.600'}>\r\n                to enjoy all of our cool recipes üç≤\r\n                </Text>\r\n            </Stack>\r\n            <Box\r\n                rounded={'lg'}\r\n                bg={useColorModeValue('white', 'gray.700')}\r\n                boxShadow={'lg'}\r\n                p={8}>\r\n                <Stack spacing={4}>\r\n                    <FormControl id=\"email\">\r\n                        <FormLabel>Email address</FormLabel>\r\n                        <Input type=\"email\" />\r\n                    </FormControl>\r\n                    <FormControl id=\"password\">\r\n                        <FormLabel>Password</FormLabel>\r\n                        <Input type=\"password\" />\r\n                    </FormControl>\r\n                    <Stack spacing={10}>\r\n                        <Stack\r\n                        direction={{ base: 'column', sm: 'row' }}\r\n                        align={'start'}\r\n                        justify={'space-between'}>\r\n                            <Text mx={'auto'}>\r\n                                Already have an account? <Link color={'blue.400'}>Sign in!</Link>\r\n                            </Text>\r\n                        </Stack>\r\n                        <Button\r\n                        bg={'blue.400'}\r\n                        color={'white'}\r\n                        _hover={{\r\n                            bg: 'blue.500',\r\n                        }}>\r\n                        Sign Up\r\n                        </Button>\r\n                    </Stack>\r\n                </Stack>\r\n            </Box>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n}","import React from 'react';\nimport Login from './components/Login/Login';\n\nfunction App() {\n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  \n    <React.StrictMode>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}